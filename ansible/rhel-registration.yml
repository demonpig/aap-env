---

- name: Group hosts based on distribution
  hosts: all
  tasks:
    - ansible.builtin.group_by:
        key: os_{{ ansible_distribution }}
      tags:
        - always

- name: Red Hat Enterprise Linux Server Registration / Setup
  hosts: os_RedHat
  gather_facts: false
  become: true
  become_user: root

  vars_prompt:
    - name: rhel_username
      prompt: Username
      private: no

    - name: rhel_password
      prompt: Password
      private: yes

  handlers:
    - name: restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

  tasks:
    # Kick this task off and we will come back to it later
    - name: Register RHEL VMs
      community.general.redhat_subscription:
        state: present
        username: "{{ rhel_username }}"
        password: "{{ rhel_password }}"
        auto_attach: true
      no_log: true
      async: 60
      poll: 0
      register: rhel_subscription

    #
    # BEGIN: Perform whatever work is needed to finish setting up the server
    #
    - name: Allow password authentication for ssh
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "{{ item.line }}"
        state: "{{ item.state }}"
        owner: root
        group: root
        mode: 0600
      loop:
        - line: 'PasswordAuthentication no'
          state: absent
        - line: 'PasswordAuthentication yes'
          state: present
      notify:
        - restart sshd
    #
    # END
    #

    - name: Check on subscription task
      ansible.builtin.async_status:
        jid: "{{ rhel_subscription.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 20
      delay: 10

    - name: Upgrade system
      ansible.builtin.yum:
        name: "*"
        state: latest
        update_cache: true
      when: job_result.finished

    - name: Reboot systems
      ansible.builtin.shell: |
        source ~/.bashrc
        vagrant reload
      args:
        chdir: ../
      delegate_to: 127.0.0.1
      become: false
      run_once: true
      tags:
        - reboot
