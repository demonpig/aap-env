upstream uwsgi {
    {% for controller in groups['controller'] %}
    server {{ hostvars[controller]['ansible_host'] }}:443;
    {% endfor %}
}

server {
    listen 443 default_server ssl;
    listen [::]:443 default_server ssl;

    # If you have a domain name, this is where to add it
    server_name _;
    keepalive_timeout 65;

    # The default client_max_body_size is 1m. Clients uploading
    # files larger than this will need to chunk said files.
    client_max_body_size 5m;

    ssl_certificate /etc/tower/tower.cert;
    ssl_certificate_key /etc/tower/tower.key;
    ssl_protocols TLSv1.2;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # RHEL system crypto policy
    ssl_ciphers PROFILE=SYSTEM;
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required, max-age in seconds)
    add_header Strict-Transport-Security max-age=63072000;

    # headers added with nginx_user_headers variable
    # end of headers added with nginx_user_headers variable

    # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)
    add_header X-Frame-Options "DENY";
    # Protect against MIME content sniffing https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
    add_header X-Content-Type-Options nosniff;

    location / {
        proxy_pass https://uwsgi;
        # Require http version 1.1 to allow for upgrade requests
        proxy_http_version 1.1;
        # We want proxy_buffering off for proxying to websockets.
        proxy_buffering off;
        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # enable this if you use HTTPS:
        proxy_set_header X-Forwarded-Proto https;
        # pass the Host: header from the client for the sake of redirects
        proxy_set_header Host $http_host;
        # We've set the Host header, so we don't need Nginx to muddle
        # about with redirects
        proxy_redirect off;
        # Depending on the request value, set the Upgrade and
        # connection headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }

    access_log /var/log/nginx/automationcontroller.access.log main;
    error_log /var/log/nginx/automationcontroller.error.log;
}