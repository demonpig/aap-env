---

- name: Group hosts based on distribution
  hosts: all
  tasks:
    - name: Grouping hosts by distribution
      tags: always
      ansible.builtin.group_by:
        key: os_{{ ansible_distribution }}

- name: Initial Setup
  hosts: all:!windows
  gather_facts: false

  handlers:
    - name: restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted
        enabled: true
      become: true
      become_user: root
      when: ansible_os_family == "RedHat"

  tasks:
    - name: Ping server to verify connection
      ansible.builtin.ping:

    - name: Gather IP information on host
      ansible.builtin.setup:

    - name: Configure /etc/hosts so all hosts are know the FQDN of each other
      become: true
      become_user: root
      ansible.builtin.blockinfile:
        block: |
          {% for host in play_hosts %}
          {{ hostvars[host]['ansible_default_ipv4']['address'] }} {{ host }}
          {% endfor %}
        dest: /etc/hosts
        owner: root
        group: root
        mode: 0644
        create: true
        backup: true

    - name: Allow password authentication for ssh
      become: true
      become_user: root
      loop:
        - line: 'PasswordAuthentication no'
          state: absent
        - line: 'PasswordAuthentication yes'
          state: present
      notify: restart sshd
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        line: "{{ item.line }}"
        state: "{{ item.state }}"
        owner: root
        group: root
        mode: 0600

# BEGIN: Red Hat
# This playbook is used to register all Red Hat Enterprise Linux (RHEL) systems.
- name: Red Hat Enterprise Linux Server Registration / Setup
  hosts: os_RedHat
  gather_facts: false
  become: true
  become_user: root

  vars_files:
    - ~/.ansible/secrets.yml

  handlers:
    - name: restart sshd
      ansible.builtin.service:
        name: sshd
        state: restarted

  vars:
    task_timeout: 600 # 10 minutes

  tasks:
    - name: Remove EPEL
      ansible.builtin.dnf:
        name: epel-release.noarch
        state: absent

    # Kick this task off and we will come back to it later
    - name: Register RHEL VMs
      no_log: true
      timeout: "{{ task_timeout }}"
      community.general.redhat_subscription:
        state: present
        username: "{{ rhel_username }}"
        password: "{{ rhel_password }}"
        auto_attach: true

    - name: Upgrade system
      timeout: "{{ task_timeout }}"
      ansible.builtin.yum:
        name: "*"
        state: latest
        update_cache: true

    - name: Reboot systems
      timeout: "{{ task_timeout }}"
      ansible.builtin.reboot:
# END
